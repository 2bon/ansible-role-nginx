---
- name: "(Setup: All NGINX) Check NGINX Default Configuration File Exists"
  stat:
    path: /etc/nginx/conf.d/default.conf
  register: default_exists

- name: "(Setup: All NGINX) Backup NGINX Default Configuration File"
  copy:
    remote_src: yes
    src: /etc/nginx/conf.d/default.conf
    dest: /etc/nginx/conf.d/default.conf.bak
  when: default_exists.stat.exists

- name: "(Setup: All NGINX) Delete NGINX Default Configuration File"
  file:
    path: /etc/nginx/conf.d/default.conf
    state: absent
  when: default_exists.stat.exists

- name: "(Setup: All NGINX) Dynamically Generate NGINX Main Configuration File"
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify: "(Handler: All OSs) Reload NGINX"

- name: "(Setup: All NGINX) Ensure NGINX HTTP Directory Exists"
  file:
    path: /etc/nginx/conf.d/http
    state: directory
  when: http_template_enable

- name: "(Setup: All NGINX) Dynamically Generate NGINX HTTP Configuration Files"
  template:
    src: "{{ item }}"
    dest: /etc/nginx/conf.d/http/{{ item | basename | regex_replace('\.j2','') }}
  with_fileglob:
    - "../templates/http/*.j2"
  when: http_template_enable
  notify: "(Handler: All OSs) Reload NGINX"

- name: "(Setup: All NGINX) Ensure NGINX Stream Directory Exists"
  file:
    path: /etc/nginx/conf.d/stream
    state: directory
  when: stream_template_enable

- name: "(Setup: All NGINX) Dynamically Generate NGINX Stream Configuration Files"
  template:
    src: "{{ item }}"
    dest: /etc/nginx/conf.d/stream/{{ item | basename | regex_replace('\.j2','') }}
  with_fileglob:
    - "../templates/stream/*.j2"
  when: stream_template_enable
  notify: "(Handler: All OSs) Reload NGINX"
